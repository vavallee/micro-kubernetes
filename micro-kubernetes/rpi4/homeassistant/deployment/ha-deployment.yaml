apiVersion: v1
kind: Pod
metadata:
  annotations:
    cni.projectcalico.org/podIP: 10.1.243.212/32
    cni.projectcalico.org/podIPs: 10.1.243.212/32
  creationTimestamp: "2020-12-16T01:07:03Z"
  generateName: ha-home-assistant-5678fb74d7-
  labels:
    app.kubernetes.io/instance: ha
    app.kubernetes.io/name: home-assistant
    pod-template-hash: 5678fb74d7
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:generateName: {}
        f:labels:
          .: {}
          f:app.kubernetes.io/instance: {}
          f:app.kubernetes.io/name: {}
          f:pod-template-hash: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"e4c33e34-f2fb-4bb8-9b6d-f1752c844cca"}:
            .: {}
            f:apiVersion: {}
            f:blockOwnerDeletion: {}
            f:controller: {}
            f:kind: {}
            f:name: {}
            f:uid: {}
      f:spec:
        f:containers:
          k:{"name":"home-assistant"}:
            .: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:livenessProbe:
              .: {}
              f:failureThreshold: {}
              f:httpGet:
                .: {}
                f:path: {}
                f:port: {}
                f:scheme: {}
              f:initialDelaySeconds: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":8123,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
            f:readinessProbe:
              .: {}
              f:failureThreshold: {}
              f:httpGet:
                .: {}
                f:path: {}
                f:port: {}
                f:scheme: {}
              f:initialDelaySeconds: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:resources: {}
            f:securityContext:
              .: {}
              f:runAsUser: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/config"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext: {}
        f:terminationGracePeriodSeconds: {}
        f:volumes:
          .: {}
          k:{"name":"config"}:
            .: {}
            f:name: {}
            f:persistentVolumeClaim:
              .: {}
              f:claimName: {}
    manager: kube-controller-manager
    operation: Update
    time: "2020-12-16T01:07:03Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:cni.projectcalico.org/podIP: {}
          f:cni.projectcalico.org/podIPs: {}
    manager: calico
    operation: Update
    time: "2020-12-16T01:07:04Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.1.243.212"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    time: "2020-12-16T01:11:41Z"
  name: ha-home-assistant-5678fb74d7-pjfkq
  namespace: default
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: ha-home-assistant-5678fb74d7
    uid: e4c33e34-f2fb-4bb8-9b6d-f1752c844cca
  resourceVersion: "17513"
  selfLink: /api/v1/namespaces/default/pods/ha-home-assistant-5678fb74d7-pjfkq
  uid: 2b594911-aba5-4c2b-9428-9f40e1c91121
spec:
  containers:
  - image: homeassistant/home-assistant:latest
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 5
      httpGet:
        path: /
        port: api
        scheme: HTTP
      initialDelaySeconds: 60
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 10
    name: home-assistant
    ports:
    - containerPort: 8123
      name: api
      protocol: TCP
    readinessProbe:
      failureThreshold: 5
      httpGet:
        path: /
        port: api
        scheme: HTTP
      initialDelaySeconds: 60
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 10
    command:
      - bash
      - -ec
      - |
        echo "getting HA configs from GIT"
        cd /tmp
        git clone https://github.com/vavallee/micro-kubernetes.git
        echo "moving configs to /config"
        cp -R /tmp/micro-kubernetes/homeassistant /config
    resources: {}
    securityContext:
      runAsUser: 0
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /config
      name: config
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-tlq8n
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: ubuntu
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: config
    persistentVolumeClaim:
      claimName: ha-home-assistant
  - name: default-token-tlq8n
    secret:
      defaultMode: 420
      secretName: default-token-tlq8n
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2020-12-16T01:07:04Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2020-12-16T01:11:41Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2020-12-16T01:11:41Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2020-12-16T01:07:04Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://f99ecd30545b640e42db591e6a220e5d22ffc3f9b32b4ffbeaec476f23d43322
    image: docker.io/homeassistant/home-assistant:latest
    imageID: docker.io/homeassistant/home-assistant@sha256:a50bcc5df25edf3e1bd9c85c08f0e79e27fccdd09c00612284b480f38a24b7cf
    lastState: {}
    name: home-assistant
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2020-12-16T01:10:32Z"
  hostIP: 192.168.1.28
  phase: Running
  podIP: 10.1.243.212
  podIPs:
  - ip: 10.1.243.212
  qosClass: BestEffort
  startTime: "2020-12-16T01:07:04Z"
